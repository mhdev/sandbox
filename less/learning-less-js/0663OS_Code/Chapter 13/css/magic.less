@import "keyframes.less";

.vendor(@property, @value) {
  -webkit-@{property}: @value;
  -moz-@{property}: @value;
  -ms-@{property}: @value;
  -o-@{property}: @value;
  @{property}: @value;
}

.magictime {
	.vendor(animation-duration, 1s);
	.vendor(animation-fill-mode, both);
}

.magic {
	.vendor(animation-name, magic);
}

.openDownLeft {
	.vendor(animation-name, openDownLeft);
}

.openDownRight {
  .vendor(animation-name, openDownRight);
}

.openUpLeft {
  .vendor(animation-name, openUpLeft);
}

.openUpRight {
  .vendor(animation-name, openUpRight);
}

.openDownLeftRetourn {
  .vendor(animation-name, openDownLeftRetourn);
}

.openDownRightRetourn {
  .vendor(animation-name, openDownRightRetourn);
}

.openUpLeftRetourn {
  .vendor(animation-name, openUpLeftRetourn);
}

.openUpRightRetourn {
  .vendor(animation-name, openUpRightRetourn);
}

.openDownLeftOut {
  .vendor(animation-name, openDownLeftOut);
}

.openDownRightOut {
  .vendor(animation-name, openDownRightOut);
}

.openUpLeftOut {
  .vendor(animation-name, openUpLeftOut);
}

.openUpRightOut {
  .vendor(animation-name, openUpRightOut);
}

.perspectiveDown {
  .vendor(backface-visibility, "visible !important");	
  .vendor(animation-name, perspectiveDown);
}

.perspectiveLeft {
  .vendor(backface-visibility, "visible !important");	


  .vendor(animation-name, perspectiveLeft);
}

.perspectiveRight {
  .vendor(backface-visibility, "visible !important");	
  .vendor(animation-name, perspectiveRight);
}

.perspectiveUp {
  .vendor(backface-visibility, "visible !important");	
  .vendor(animation-name, perspectiveUp);
}

.perspectiveDownRetourn {
  .vendor(backface-visibility, "visible !important");	
  .vendor(animation-name, perspectiveDownRetourn);
}

.perspectiveLeftRetourn {
  .vendor(backface-visibility, "visible !important");	
  .vendor(animation-name, perspectiveLeftRetourn);
}

.perspectiveRightRetourn {
  .vendor(backface-visibility, "visible !important");	
  .vendor(animation-name, perspectiveRightRetourn);
}

.perspectiveUpRetourn {
  .vendor(backface-visibility, "visible !important");	
  .vendor(animation-name, perspectiveUpRetourn);
}

.puffIn {
  .vendor(animation-name, puffIn);
}

.puffOut {
  .vendor(animation-name, puffOut);
}

.rotateDown {
  .vendor(backface-visibility, "visible !important");	
  .vendor(animation-name, rotateDown);
}

.rotateLeft {
  .vendor(backface-visibility, "visible !important");	
  .vendor(animation-name, rotateLeft);
}

.rotateRight {
  .vendor(backface-visibility, "visible !important");	
  .vendor(animation-name, rotateRight);
}

.rotateUp {
  .vendor(backface-visibility, "visible !important");	
  .vendor(animation-name, rotateUp);
}

.slideDown {
  .vendor(animation-name, slideDown);
}

.slideLeft {
  .vendor(animation-name, slideLeft);
}

.slideRight {
  .vendor(animation-name, slideRight);
}

.slideUp {
  .vendor(animation-name, slideUp);
}

.slideDownRetourn {
  .vendor(animation-name, slideDownRetourn);
}

.slideLeftRetourn {
  .vendor(animation-name, slideLeftRetourn);
}

.slideRightRetourn {
  .vendor(animation-name, slideRightRetourn);
}

.slideUpRetourn {
  .vendor(animation-name, slideUpRetourn);
}

.swap {
  .vendor(animation-name, swap);
}

.twisterInDown {
  .vendor(animation-name, twisterInDown);
}

.twisterInUp {
  .vendor(animation-name, twisterInUp);
}

.vanishIn {
  .vendor(animation-name, vanishIn);
}

.vanishOut {
  .vendor(animation-name, vanishOut);
}

.swashOut {
  .vendor(animation-name, swashOut);
}

.swashIn {
  .vendor(animation-name, swashIn);
}

.foolishOut {
  .vendor(animation-name, foolishOut);
}

.foolishIn {
  .vendor(animation-name, foolishIn);
}

.holeOut {
  .vendor(animation-name, holeOut);
}

.tinRightOut {
  .vendor(animation-name, tinRightOut);
}

.tinLeftOut {
  .vendor(animation-name, tinLeftOut);
}

.tinUpOut {
  .vendor(animation-name, tinUpOut);
}

.tinDownOut {
  .vendor(animation-name, tinDownOut);
}

.tinRightIn {
  .vendor(animation-name, tinRightIn);
}

.tinLeftIn {
  .vendor(animation-name, tinLeftIn);
}

.tinUpIn {
  .vendor(animation-name, tinUpIn);
}

.tinDownIn {
  .vendor(animation-name, tinDownIn);
}

.bombRightOut {
  .vendor(animation-name, bombRightOut);
}

.bombLeftOut {
  .vendor(animation-name, bombLeftOut)
}
